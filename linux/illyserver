#bin/bash

SERVICE='minecraftserver.jar'
USER='minecraft'
SCREEN='illycraft'
MCPATH='/home/minecraft/illycraft'
BACKUPPATH='../../remote/backupdir/'
WORLDNAME='IllyCraft'
MINHEAP=8
MAXHEAP=2
CPU_COUNT=1


INVOCATION="java -Xmx${MINHEAP}G -Xms${MAXHEAP}G -jar $SERVICE nogui"

ME='whoami'
as_user() {
    if [ $ME == $USER ] ; then
        bash -C "$1"
    else
        su - $USER -C "$1"
    fi
}

mc_start() {
    if  pgrep -u $USER -f $SERVICE > /dev/null
        then
            echo "$SERVICE is already running!"
        else
            echo "Starting $SERVICE..."
            cd $MCPATH
            as_user "cd $MCPATH && screen -h $SCREEN -dmS minecraft $INVOCATION"
            sleep 7
            if pgrep -u $USERNAME -f $SERVICE > /dev/null
            then
                echo "$SERVICE is now running."
            else
                echo "Error! Could not start $SERVICE!"
        fi
   fi
}

mc_stop() {
    if pgrep -u $USER -f $SERVICE > /dev/null
        then
            echo "Stopping $SERVICE "
            as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"say SERVER SHUTTING DOWN IN 60 SECONDS. Saving map...\"\015'"
            sleep 30
            as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"say SERVER SHUTTING DOWN IN 30 SECONDS\"\015'"
            as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"save-all\"\015'"
            sleep 30
            as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"stop\"\015'"
            sleep 10
        else
            echo "$SERVICE was not running"
        fi
        if pgrep -u $USER -f $SERVICE > /dev/null
            echo "Error! $SERVICE could not be stopped."
        else
            echo "$SERVICE is stopped."
        fi
}

mc_saveoff() {
    if pgrep -u $USER -f $SERVICE > /dev/null
        then
            echo "$SERVICE is running... suspending saves"
            as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"save-off\"\015'"
            as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"save-all\"\015'"
            sync
    else
        echo "$SERVICE is not running can't  save."
    fi
}

mc_saveon() {
    if pgrep -u $USER -f $SERVICE > /dev/null
        then
            echo "$SERVICE is running... re-enabling saves"
            as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"save-on\"\015'"
    else
        echo "$SERVICE is not running can't save."
    fi
}

mc_backup() {

    NOW=`date "+%Y-%m-%d_%Hh%M"`
    BACKUP_FILE="$BACKUPPATH/${WORLD}_${NOW}.tar"

    as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"say SERVER BACKUP STARTING. Server going readonly...\"\015'"
    mc_saveoff
    echo "Backing up the world files..."
    as_user "tar -C \"$MCPATH\" -cf \"$BACKUP_FILE\" $WORLD"

    echo "Backing up mods"
    as_user "tar -C \"$MCPATH\" -rf \"$BACKUP_FILE\" mods"

    echo "Backing up configs"
    as_user "tar -C \"$MCPATH\" -rf \"$BACKUP_FILE\" config"

    as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"say SERVER BACKUP COMPLETE. Server going read-write...\"\015'"
    mc_saveon

    echo "Compressing backup"
    as_user "gzip -f \"$BACKUP_FILE\""
    echo "Backup complete"
}

mc_commmand() {
    command="$1";
    if pgrep -u $USER -f $SERVICE > /dev/null
        then
            pre_log_len=`wc -l "$MCPATH/logs/latest.log" | awk '{print $1}'`
            echo "$SERVICE is running... executing command"
            as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"$command\"\015'"
            sleep .5
            tail -n $[`wc -l "$MCPATH/logs/latest.log" | awk '{print $1}'`-$pre_log_len] "$MCPATH/logs/latest.log"
    fi

}

mc_updateforge() {
    echo
}

case "$1" in
    start)
     mc_start
     ;;
    stop)
     mc_backup
     mc_stop
     ;;
    restart)
     mc_stop
     mc_start
     ;;
    backup)
     mc_backup
     ;;
    status)
     if pgrep -u $USERNAME -f $SERVICE > /dev/null
     then
       echo "$SERVICE is running."
     else
       echo "$SERVICE is not running."
     fi
     ;;
    command)
     if [ $# -gt 1 ]; then
       shift
       mc_command "$*"
     else
       echo "Must specify server command (try 'help'?)"
     fi
     ;;
 
   *)
   echo "Usage: $0 {start|stop|update|backup|status|restart|command \"server command\"}"
   exit 1
   ;;
esac

exit 0
